// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using wepapisassiment.Data;

#nullable disable

namespace wepapisassiment.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DirectorsMovies", b =>
                {
                    b.Property<int>("DirectorsID")
                        .HasColumnType("int");

                    b.Property<int>("MoviesId")
                        .HasColumnType("int");

                    b.HasKey("DirectorsID", "MoviesId");

                    b.HasIndex("MoviesId");

                    b.ToTable("DirectorsMovies");
                });

            modelBuilder.Entity("wepapisassiment.Models.Catigory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Catigories");
                });

            modelBuilder.Entity("wepapisassiment.Models.Directors", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NationalityId")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("NationalityId")
                        .IsUnique();

                    b.ToTable("Directors");
                });

            modelBuilder.Entity("wepapisassiment.Models.Movies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CatigoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Publishyear")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CatigoryId");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("wepapisassiment.Models.Nationalty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Nationalties");
                });

            modelBuilder.Entity("DirectorsMovies", b =>
                {
                    b.HasOne("wepapisassiment.Models.Directors", null)
                        .WithMany()
                        .HasForeignKey("DirectorsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("wepapisassiment.Models.Movies", null)
                        .WithMany()
                        .HasForeignKey("MoviesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("wepapisassiment.Models.Directors", b =>
                {
                    b.HasOne("wepapisassiment.Models.Nationalty", "Nationalty")
                        .WithOne("Directors")
                        .HasForeignKey("wepapisassiment.Models.Directors", "NationalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Nationalty");
                });

            modelBuilder.Entity("wepapisassiment.Models.Movies", b =>
                {
                    b.HasOne("wepapisassiment.Models.Catigory", "Catigory")
                        .WithMany("Movies")
                        .HasForeignKey("CatigoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catigory");
                });

            modelBuilder.Entity("wepapisassiment.Models.Catigory", b =>
                {
                    b.Navigation("Movies");
                });

            modelBuilder.Entity("wepapisassiment.Models.Nationalty", b =>
                {
                    b.Navigation("Directors")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
